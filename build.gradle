plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
    extraLibs
}

configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    mavenCentral()
    maven { url 'https://repo1.maven.org/maven2' }
    maven { url 'https://libraries.minecraft.net' }
    maven { url 'https://clojars.org/repo/' }
    maven { url 'https://jitpack.io' }

//    maven { url 'https://maven.fabricmc.net/' }
}

dependencies {
    implementation 'com.github.GiantLuigi4:FlameMappings:master-SNAPSHOT'
    implementation "com.github.GiantLuigi4:FlameMC:master-SNAPSHOT"
    compileOnly "com.github.GiantLuigi4:FlameASM:master-SNAPSHOT"
    implementation "com.github.GiantLuigi4:Bytecode-Utils:master-SNAPSHOT"
    compileOnly "com.github.GiantLuigi4:MCMappingsHelper:master-SNAPSHOT"
    testCompileOnly "com.github.GiantLuigi4:MCMappingsHelper:master-SNAPSHOT"
    extraLibs ("com.github.GiantLuigi4:MCMappingsHelper:master-SNAPSHOT") {
        exclude group: 'com.google.code.gson'
    }
    implementation group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'
    implementation 'org.codehaus.janino:janino:3.1.2'
    implementation 'org.codehaus.janino:commons-compiler:3.1.2'
    implementation 'org.codehaus.janino:commons-compiler-jdk:3.1.2'

    //compileOnly files('run/flame_mods/FlameASM-1.0-SNAPSHOT.jar')
    configurations.compile.extendsFrom(configurations.extraLibs)
}

//jars the mod directly into flame_mods folder
jar {
    File dest = new File(System.getProperty("user.dir") + File.separator + "run" + File.separator + "flame_mods" + File.separator)
    if (!dest.exists()) {
        dest.getParentFile().mkdirs()
        dest.mkdirs()
    }
    setDestinationDir(dest)
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}